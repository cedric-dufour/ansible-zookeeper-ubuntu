---

- name: "Install Basic Libraries"
  tags: dependencies
  apt: name="{{ item }}" state=latest
  with_items:
    - ssh
    - rsync

- name: "Create ZooKeeper group"
  tags:
    - installation
    - group
  group:
    state: present
    name: "{{ ZOOKEEPER_GROUP }}"
    system: yes

- name: "Create ZooKeeper user"
  tags:
    - installation
    - user
  user:
    state: present
    name: "{{ ZOOKEEPER_USER }}"
    comment: "ZooKeeper Distributed Coordination Server (daemon account)"
    system: yes
    group: "{{ ZOOKEEPER_GROUP }}"
    groups: staff
    home: "{{ ZOOKEEPER_HOME }}"
    createhome: no
    shell: /usr/sbin/nologin

- name: "Ensure {{ ZOOKEEPER_ROOT }} exists"
  tags:
    - installation
    - filesystem
  file:
    state: directory
    path: "{{ ZOOKEEPER_ROOT }}"

- name: "Stop ZooKeeper"
  tags:
    - service
    - stop
  systemd:
    name: "zookeeper"
    state: stopped
  when: ZOOKEEPER_STOP | bool
  failed_when: false

- name: "Download ZooKeeper tarball"
  tags:
    - installation
    - download
  get_url:
    url: "{{ ZOOKEEPER_URL }}"
    dest: "/opt/zookeeper-{{ ZOOKEEPER_VERSION }}.tar.gz"
    checksum: "{{ ZOOKEEPER_CHECKSUM }}"

- name: "Unpack ZooKeeper tarball"
  tags:
    - installation
    - unpack
  unarchive:
    src: "/opt/zookeeper-{{ ZOOKEEPER_VERSION }}.tar.gz"
    dest: "{{ ZOOKEEPER_ROOT }}"
    creates: "{{ ZOOKEEPER_ROOT }}/zookeeper-{{ ZOOKEEPER_VERSION }}"
    copy: no

- name: "Force owner to root"
  tags:
    - installation
    - filesystem
  file:
    state: directory
    path: "{{ ZOOKEEPER_ROOT }}/zookeeper-{{ ZOOKEEPER_VERSION }}"
    recurse: yes
    owner: root
    group: root

- name: "Symlink current ZooKeeper version"
  tags:
    - installation
    - filesystem
  file:
    state: link
    force: yes
    path: "{{ ZOOKEEPER_HOME }}"
    src: "./zookeeper-{{ ZOOKEEPER_VERSION }}/"

- name: "Ensure {{ ZOOKEEPER_CONF }} exists"
  tags:
    - installation
    - filesystem
  file:
    state: directory
    path: "{{ ZOOKEEPER_CONF }}"

- name: "Debugs hosts variables"
  debug: var=hostvars
  tags:
    - debug
  when: ANSIBLE_DEBUG | default(false) | bool

- name: "Create ZooKeeper (local site) configuration"
  tags:
    - installation
    - configuration
    - filesystem
    - service
  template:
    src: zoo.cfg.j2
    dest: "{{ ZOOKEEPER_CONF }}/zoo.cfg"
    owner: root
    group: "{{ ZOOKEEPER_GROUP }}"
    mode: 0640

- name: "Symlink ZooKeeper (local site) configuration"
  tags:
    - installation
    - configuration
    - filesystem
  file:
    state: link
    force: yes
    path: "{{ ZOOKEEPER_HOME }}/conf/zoo.cfg"
    src: "{{ ZOOKEEPER_CONF }}/zoo.cfg"

- name: "Ensure {{ ZOOKEEPER_LOGS }} exists (with proper permissions)"
  tags:
    - installation
    - filesystem
  file:
    state: directory
    path: "{{ ZOOKEEPER_LOGS }}"
    owner: root
    group: "{{ ZOOKEEPER_GROUP }}"
    mode: 02730

- name: "Symlink ZooKeeper logs"
  tags:
    - installation
    - filesystem
  file:
    state: link
    force: yes
    path: "{{ ZOOKEEPER_HOME }}/logs"
    src: "{{ ZOOKEEPER_LOGS }}/"

- name: "Ensure {{ ZOOKEEPER_DATA }} exists (with proper permissions)"
  tags:
    - installation
    - filesystem
  file:
    state: directory
    path: "{{ ZOOKEEPER_DATA }}"
    owner: root
    group: "{{ ZOOKEEPER_GROUP }}"
    mode: 02730

- name: "Symlink ZooKeeper data"
  tags:
    - installation
    - filesystem
  file:
    state: link
    force: yes
    path: "{{ ZOOKEEPER_HOME }}/data"
    src: "{{ ZOOKEEPER_DATA }}/"

- name: "Create ZooKeeper node ID"
  tags:
    - installation
    - configuration
    - filesystem
  template:
    src: zoo.myid.j2
    dest: "{{ ZOOKEEPER_DATA }}/myid"
  when: hostvars[ansible_host]['zkId'] is defined

- name: "Delete temporary ZooKeeper data"
  tags:
    - installation
    - filesystem
  file:
    state: absent
    path: "{{ item }}"
  with_items:
    - "/tmp/zookeeper"
    - "{{ ZOOKEEPER_DATA }}/zookeeper_server.pid"

- name: "Configure ZooKeeper systemd service"
  tags:
    - installation
    - service
  template:
    src: zookeeper.service.j2
    dest: "/etc/systemd/system/zookeeper.service"

- name: "Enable ZooKeeper (at boot)"
  tags:
    - service
    - enable
  systemd:
    name: "zookeeper"
    daemon_reload: yes
    enabled: "{{ ZOOKEEPER_ATBOOT }}"

- name: "Start ZooKeeper"
  tags:
    - service
    - start
  systemd:
    name: "zookeeper"
    state: started
  when: ZOOKEEPER_START | bool

